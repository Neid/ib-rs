/* 
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// WagersInner : List of wagers

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct WagersInner {
  #[serde(rename = "conid")]
  conid: Option<f32>,
  #[serde(rename = "curr")]
  curr: Option<String>,
  #[serde(rename = "desc")]
  desc: Option<String>,
  #[serde(rename = "part")]
  part: Option<String>
}

impl WagersInner {
  /// List of wagers
  pub fn new() -> WagersInner {
    WagersInner {
      conid: None,
      curr: None,
      desc: None,
      part: None
    }
  }

  pub fn set_conid(&mut self, conid: f32) {
    self.conid = Some(conid);
  }

  pub fn with_conid(mut self, conid: f32) -> WagersInner {
    self.conid = Some(conid);
    self
  }

  pub fn conid(&self) -> Option<&f32> {
    self.conid.as_ref()
  }

  pub fn reset_conid(&mut self) {
    self.conid = None;
  }

  pub fn set_curr(&mut self, curr: String) {
    self.curr = Some(curr);
  }

  pub fn with_curr(mut self, curr: String) -> WagersInner {
    self.curr = Some(curr);
    self
  }

  pub fn curr(&self) -> Option<&String> {
    self.curr.as_ref()
  }

  pub fn reset_curr(&mut self) {
    self.curr = None;
  }

  pub fn set_desc(&mut self, desc: String) {
    self.desc = Some(desc);
  }

  pub fn with_desc(mut self, desc: String) -> WagersInner {
    self.desc = Some(desc);
    self
  }

  pub fn desc(&self) -> Option<&String> {
    self.desc.as_ref()
  }

  pub fn reset_desc(&mut self) {
    self.desc = None;
  }

  pub fn set_part(&mut self, part: String) {
    self.part = Some(part);
  }

  pub fn with_part(mut self, part: String) -> WagersInner {
    self.part = Some(part);
    self
  }

  pub fn part(&self) -> Option<&String> {
    self.part.as_ref()
  }

  pub fn reset_part(&mut self) {
    self.part = None;
  }

}



