/* 
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AllocationInnerGroupShort : short positions allocation

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AllocationInnerGroupShort {
  #[serde(rename = "Banks")]
  banks: Option<f32>,
  #[serde(rename = "Airlines")]
  airlines: Option<f32>,
  #[serde(rename = "Internet")]
  internet: Option<f32>
}

impl AllocationInnerGroupShort {
  /// short positions allocation
  pub fn new() -> AllocationInnerGroupShort {
    AllocationInnerGroupShort {
      banks: None,
      airlines: None,
      internet: None
    }
  }

  pub fn set_banks(&mut self, banks: f32) {
    self.banks = Some(banks);
  }

  pub fn with_banks(mut self, banks: f32) -> AllocationInnerGroupShort {
    self.banks = Some(banks);
    self
  }

  pub fn banks(&self) -> Option<&f32> {
    self.banks.as_ref()
  }

  pub fn reset_banks(&mut self) {
    self.banks = None;
  }

  pub fn set_airlines(&mut self, airlines: f32) {
    self.airlines = Some(airlines);
  }

  pub fn with_airlines(mut self, airlines: f32) -> AllocationInnerGroupShort {
    self.airlines = Some(airlines);
    self
  }

  pub fn airlines(&self) -> Option<&f32> {
    self.airlines.as_ref()
  }

  pub fn reset_airlines(&mut self) {
    self.airlines = None;
  }

  pub fn set_internet(&mut self, internet: f32) {
    self.internet = Some(internet);
  }

  pub fn with_internet(mut self, internet: f32) -> AllocationInnerGroupShort {
    self.internet = Some(internet);
    self
  }

  pub fn internet(&self) -> Option<&f32> {
    self.internet.as_ref()
  }

  pub fn reset_internet(&mut self) {
    self.internet = None;
  }

}



