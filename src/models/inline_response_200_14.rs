/* 
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InlineResponse20014 {
  #[serde(rename = "orders")]
  orders: Option<Vec<::models::InlineResponse20014Orders>>,
  /// If live order update is a snapshot
  #[serde(rename = "snapshot")]
  snapshot: Option<bool>
}

impl InlineResponse20014 {
  pub fn new() -> InlineResponse20014 {
    InlineResponse20014 {
      orders: None,
      snapshot: None
    }
  }

  pub fn set_orders(&mut self, orders: Vec<::models::InlineResponse20014Orders>) {
    self.orders = Some(orders);
  }

  pub fn with_orders(mut self, orders: Vec<::models::InlineResponse20014Orders>) -> InlineResponse20014 {
    self.orders = Some(orders);
    self
  }

  pub fn orders(&self) -> Option<&Vec<::models::InlineResponse20014Orders>> {
    self.orders.as_ref()
  }

  pub fn reset_orders(&mut self) {
    self.orders = None;
  }

  pub fn set_snapshot(&mut self, snapshot: bool) {
    self.snapshot = Some(snapshot);
  }

  pub fn with_snapshot(mut self, snapshot: bool) -> InlineResponse20014 {
    self.snapshot = Some(snapshot);
    self
  }

  pub fn snapshot(&self) -> Option<&bool> {
    self.snapshot.as_ref()
  }

  pub fn reset_snapshot(&mut self) {
    self.snapshot = None;
  }

}



