/* 
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AllocationInner : allocation

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AllocationInner {
  #[serde(rename = "assetClass")]
  asset_class: Option<::models::AllocationInnerAssetClass>,
  #[serde(rename = "group")]
  group: Option<::models::AllocationInnerGroup>,
  #[serde(rename = "sector")]
  sector: Option<::models::AllocationInnerSector>
}

impl AllocationInner {
  /// allocation
  pub fn new() -> AllocationInner {
    AllocationInner {
      asset_class: None,
      group: None,
      sector: None
    }
  }

  pub fn set_asset_class(&mut self, asset_class: ::models::AllocationInnerAssetClass) {
    self.asset_class = Some(asset_class);
  }

  pub fn with_asset_class(mut self, asset_class: ::models::AllocationInnerAssetClass) -> AllocationInner {
    self.asset_class = Some(asset_class);
    self
  }

  pub fn asset_class(&self) -> Option<&::models::AllocationInnerAssetClass> {
    self.asset_class.as_ref()
  }

  pub fn reset_asset_class(&mut self) {
    self.asset_class = None;
  }

  pub fn set_group(&mut self, group: ::models::AllocationInnerGroup) {
    self.group = Some(group);
  }

  pub fn with_group(mut self, group: ::models::AllocationInnerGroup) -> AllocationInner {
    self.group = Some(group);
    self
  }

  pub fn group(&self) -> Option<&::models::AllocationInnerGroup> {
    self.group.as_ref()
  }

  pub fn reset_group(&mut self) {
    self.group = None;
  }

  pub fn set_sector(&mut self, sector: ::models::AllocationInnerSector) {
    self.sector = Some(sector);
  }

  pub fn with_sector(mut self, sector: ::models::AllocationInnerSector) -> AllocationInner {
    self.sector = Some(sector);
    self
  }

  pub fn sector(&self) -> Option<&::models::AllocationInnerSector> {
    self.sector.as_ref()
  }

  pub fn reset_sector(&mut self) {
    self.sector = None;
  }

}



