/* 
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AllocationInnerSector : portfolio allocation by sector

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AllocationInnerSector {
  #[serde(rename = "long")]
  long: Option<::models::AllocationInnerSectorLong>,
  #[serde(rename = "short")]
  short: Option<::models::AllocationInnerSectorShort>
}

impl AllocationInnerSector {
  /// portfolio allocation by sector
  pub fn new() -> AllocationInnerSector {
    AllocationInnerSector {
      long: None,
      short: None
    }
  }

  pub fn set_long(&mut self, long: ::models::AllocationInnerSectorLong) {
    self.long = Some(long);
  }

  pub fn with_long(mut self, long: ::models::AllocationInnerSectorLong) -> AllocationInnerSector {
    self.long = Some(long);
    self
  }

  pub fn long(&self) -> Option<&::models::AllocationInnerSectorLong> {
    self.long.as_ref()
  }

  pub fn reset_long(&mut self) {
    self.long = None;
  }

  pub fn set_short(&mut self, short: ::models::AllocationInnerSectorShort) {
    self.short = Some(short);
  }

  pub fn with_short(mut self, short: ::models::AllocationInnerSectorShort) -> AllocationInnerSector {
    self.short = Some(short);
    self
  }

  pub fn short(&self) -> Option<&::models::AllocationInnerSectorShort> {
    self.short.as_ref()
  }

  pub fn reset_short(&mut self) {
    self.short = None;
  }

}



