/* 
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ScannerresultContractsContract {
  #[serde(rename = "contractID")]
  contract_id: Option<i32>,
  #[serde(rename = "distance")]
  distance: Option<i32>,
  #[serde(rename = "inScanTime")]
  in_scan_time: Option<String>
}

impl ScannerresultContractsContract {
  pub fn new() -> ScannerresultContractsContract {
    ScannerresultContractsContract {
      contract_id: None,
      distance: None,
      in_scan_time: None
    }
  }

  pub fn set_contract_id(&mut self, contract_id: i32) {
    self.contract_id = Some(contract_id);
  }

  pub fn with_contract_id(mut self, contract_id: i32) -> ScannerresultContractsContract {
    self.contract_id = Some(contract_id);
    self
  }

  pub fn contract_id(&self) -> Option<&i32> {
    self.contract_id.as_ref()
  }

  pub fn reset_contract_id(&mut self) {
    self.contract_id = None;
  }

  pub fn set_distance(&mut self, distance: i32) {
    self.distance = Some(distance);
  }

  pub fn with_distance(mut self, distance: i32) -> ScannerresultContractsContract {
    self.distance = Some(distance);
    self
  }

  pub fn distance(&self) -> Option<&i32> {
    self.distance.as_ref()
  }

  pub fn reset_distance(&mut self) {
    self.distance = None;
  }

  pub fn set_in_scan_time(&mut self, in_scan_time: String) {
    self.in_scan_time = Some(in_scan_time);
  }

  pub fn with_in_scan_time(mut self, in_scan_time: String) -> ScannerresultContractsContract {
    self.in_scan_time = Some(in_scan_time);
    self
  }

  pub fn in_scan_time(&self) -> Option<&String> {
    self.in_scan_time.as_ref()
  }

  pub fn reset_in_scan_time(&mut self) {
    self.in_scan_time = None;
  }

}



