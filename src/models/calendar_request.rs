/* 
 * Client Portal Web API
 *
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CalendarRequest {
  #[serde(rename = "date")]
  date: Option<::models::CalendarRequestDate>,
  #[serde(rename = "filters")]
  filters: Option<::models::CalendarRequestFilters>
}

impl CalendarRequest {
  pub fn new() -> CalendarRequest {
    CalendarRequest {
      date: None,
      filters: None
    }
  }

  pub fn set_date(&mut self, date: ::models::CalendarRequestDate) {
    self.date = Some(date);
  }

  pub fn with_date(mut self, date: ::models::CalendarRequestDate) -> CalendarRequest {
    self.date = Some(date);
    self
  }

  pub fn date(&self) -> Option<&::models::CalendarRequestDate> {
    self.date.as_ref()
  }

  pub fn reset_date(&mut self) {
    self.date = None;
  }

  pub fn set_filters(&mut self, filters: ::models::CalendarRequestFilters) {
    self.filters = Some(filters);
  }

  pub fn with_filters(mut self, filters: ::models::CalendarRequestFilters) -> CalendarRequest {
    self.filters = Some(filters);
    self
  }

  pub fn filters(&self) -> Option<&::models::CalendarRequestFilters> {
    self.filters.as_ref()
  }

  pub fn reset_filters(&mut self) {
    self.filters = None;
  }

}



